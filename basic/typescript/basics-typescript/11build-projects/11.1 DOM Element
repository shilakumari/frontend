DOM Element Selection & OOP Rendering

<template>
	: template tags are default HTML tag, supported by modern browsers
    which allow us to specify some HTML code which is not loaded immediately,
    which is not rendered immidiatly, Instead we can reach via JavaScript.

First Project
app.css    
 * { box-sizing: border-box;}
  html { font-family: sans-serif;}
  body { margin: 0;}
  label, input,
  textarea { display: block; margin: 0.5rem 0; }
  label { font-weight: bold;}
  input,
  textarea { font: inherit; padding: 0.2rem 0.4rem; width: 100%; max-width: 30rem; border: 1px solid #ccc;}
  input:focus,
  textarea:focus { outline: none; background: #fff5f9;}
  button { font: inherit; background: #ff0062; border: 1px solid #ff0062; cursor: pointer; color: white; padding: 0.75rem 1rem;}
  button:focus { outline: none;}
  button:hover,
  button:active { background: #a80041;border-color: #a80041;}
  .projects { margin: 1rem;border: 1px solid #ff0062;}
  .projects header { background: #ff0062; height: 3.5rem; display: flex; justify-content: center; align-items: center;}
  #finished-projects { border-color: #0044ff;}
  #finished-projects header { background: #0044ff;}
  .projects h2 { margin: 0; color: white;}
  .projects ul { list-style: none; margin: 0; padding: 1rem;}
  .projects li { box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.26); padding: 1rem; margin: 1rem;}
  .projects li h2 { color: #ff0062;margin: 0.5rem 0;}
  #finished-projects li h2 { color: #0044ff;}
  .projects li h3 { color: #575757; font-size: 1rem;}
  .project li p { margin: 0;}
  .droppable { background: #ffe3ee;}
  #finished-projects .droppable { background: #d6e1ff;}
  #user-input { margin: 1rem; padding: 1rem; border: 1px solid #ff0062; background: #f7f7f7;}


index.html
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>ProjectManager</title>
    <link rel="stylesheet" href="app.css" />
    <script src="dist/app.js" defer></script>
  </head>
  <body>
    <template id="project-input">
      <form>
        <div class="form-control">
          <label for="title">Title</label>
          <input type="text" id="title" />
        </div>
        <div class="form-control">
          <label for="description">Description</label>
          <textarea id="description" rows="3"></textarea>
        </div>
        <div class="form-control">
          <label for="people">People</label>
          <input type="number" id="people" step="1" min="0" max="10" />
        </div>
        <button type="submit">ADD PROJECT</button>
      </form>
    </template>
    
    <template id="single-project">
      <li></li>
    </template>
    
    <template id="project-list">
      <section class="projects">
        <header>
          <h2></h2>
        </header>
        <ul></ul>
      </section>
    </template>
    
    <div id="app"></div>
  
  </body>
</html>


app.ts
  class ProjectInput {
    templateElement: HTMLTemplateElement;
    hostElement: HTMLDivElement;
    element: HTMLFormElement;
    constructor() {
      this.templateElement = document.getElementById('project-input')! as HTMLTemplateElement;
      this.hostElement = document.getElementById('app')! as HTMLDivElement;
      
      const importedNode = document.importNode(this.templateElement.content,true);//'content' property exists in HTMLTemplateElement,it gives reference to the content of template
      this.element = importedNode.firstElementChild as HTMLFormElement;
      this.attach();
  }
  private attach() {
    this.hostElement.insertAdjacentElement('afterbegin', this.element);
    //insertAdjacentElement is the method provided by the browser in JavaScript to insert the HTML element
  }
}
const prjInput = new ProjectInput();




DOM Elements









